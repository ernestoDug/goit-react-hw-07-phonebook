// import PropTypes from 'prop-types';
import { getContacts } from 'redux/selectors';
import { useDispatch, useSelector } from 'react-redux';
import { ToastContainer } from 'react-toastify';
import { toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import css from './ContactForm.module.css';

import ButtonSbmt from 'components/ButtonSbmt/ButtonSbmt';
import { addContactsAct } from 'redux/slice/contactsSlice';
import CounterContacts from 'components/CounterComtacts/CounterContacts';

const ContactForm = () => {
  const dispatch = useDispatch();
  const —Åontacts = useSelector(getContacts);

  // –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫
  const submiter = event => {
    event.preventDefault();
    const form = event.target;
    const formName = event.target.elements.name.value;
    const formNumber = event.target.elements.number.value;
    //  –∑–∞–±–æ—Ä–æ–Ω–∞
    if (—Åontacts.some(({ name }) => name === formName)) {
      return toast.warn(`üëª –£–≤–∞–∂–Ω—ñ—à–µ,  ${formName}  –≤–∂–µ –Ñ –≤ –∫–æ–Ω–¢–ê–ö—Ç–∞—Ö üëª`);
    }
    dispatch(addContactsAct(formName, formNumber));
    //  –æ—á–∏—Å—Ç–∫–∞
    form.reset();
    //  console.log(form.elements.name.value, form.elements.number.value)
  };
  return (
    <> 
      <ToastContainer
        position="top-center"
        autoClose={2000}
        hideProgressBar={false}
        newestOnTop={false}
        closeOnClick
        rtl={false}
        pauseOnFocusLoss
        draggable
        pauseOnHover
        theme="colored"
      />
      <div className={css.phoneBookWrapp}>
        <CounterContacts />
        <div className={css.forms}>
          <h3>–¢–µ–ª–µ—Ñ–æ–Ω–Ω–∞ –∫–Ω–∏–≥–∞</h3>
          <form onSubmit={submiter} className={css.formsWr}>
            <label className={css.label}>
              –Ü–º'—è
              <input
                className={css.input}
                value={—Åontacts.name}
                // pattern= "^[a-zA-Z–∞-—è–ê-–Ø]+(([' -][a-zA-Z–∞-—è–ê-–Ø ])?[a-zA-Z–∞-—è–ê-–Ø]*)*$"
                //  —Ç–∞–∫ —á–æ–º—É—Å—å –ø–æ–º–∏–ª–∫–∞ –≤ –∫–æ–Ω—Å–æ–ª—ñ
                type="text"
                placeholder="–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è"
                title="–Ü–º'—è –º–æ–∂–µ –º—ñ—Å—Ç–∏—Ç–∏ –ª–∏—à–µ –ª—ñ—Ç–µ—Ä–∏, –∞–ø–æ—Å—Ç—Ä–æ—Ñ, —Ç–∏—Ä–µ —Ç–∞ –ø—Ä–æ–±—ñ–ª–∏. –ù–∞–ø—Ä–∏–∫–ª–∞–¥ –ê–¥—Ä—ñ–∞–Ω, –î–∂–µ–π–∫–æ–± –ú–µ—Ä—Å–µ—Ä, –®–∞—Ä–ª—å –¥–µ –ë–∞—Ü –¥–µ –ö–∞—Å—Ç–µ–ª—å–º–æ—Ä –¥'–ê—Ä—Ç–∞–Ω—å—è–Ω"
                name="name"
                required
              />
            </label>

            <label className={css.label}>
              –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É
              <input
                className={css.input}
                type="tel"
                placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É"
                value={—Åontacts.number}
                name="number"
                // pattern= "\+?\d{1,4}?[-.\s]?\(?\d{1,3}?\)?[-.\s]?\d{1,4}[-.\s]?\d{1,4}[-.\s]?\d{1,9}"
                // i —Ç–∞–∫ —á–æ–º—É—Å—å –ø–æ–º–∏–ª–∫–∞ –≤ –∫–æ–Ω—Å–æ–ª—ñ
                title="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –º–∞—î —Å–∫–ª–∞–¥–∞—Ç–∏—Å—è –∑ —Ü–∏—Ñ—Ä —ñ –º–æ–∂–µ –º—ñ—Å—Ç–∏—Ç–∏ –ø—Ä–æ–±—ñ–ª–∏, —Ç–∏—Ä–µ, –∫—Ä—É–≥–ª—ñ –¥—É–∂–∫–∏ —Ç–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ +"
                required
              />
            </label>
            <ButtonSbmt />
          </form>
        </div>
        <img
          className={css.imgBus}
          width="200"
          height={200}
          src="https://png.pngtree.com/thumb_back/fw800/background/20220523/pngtree-hippie-bus-with-peace-and-love-label-and-flowers-image_1393563.jpg"
          alt="bus"
        />
      </div>
    </>
  );
};

// // –ø—Ä–æ—Ç–æ—Ç–∞–π–ø–∏
// ContactForm.propTypes = {
//   number: PropTypes.number,
//   name: PropTypes.string,
// };

export default ContactForm;
